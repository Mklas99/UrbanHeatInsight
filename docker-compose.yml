version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: ../.devcontainer/Dockerfile
    working_dir: /workspace/backend
    command: >
      uvicorn app.main:app
      --host 0.0.0.0
      --port ${BACKEND_PORT}
      --reload
      --reload-dir app
      --reload-exclude /workspace/frontend/*
      --reload-exclude /workspace/backend/app/__pycache__/*
      --reload-exclude /workspace/.git/*
    volumes:
      - ./backend:/workspace/backend:cached
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      # Optionally, pass DATABASE_URL if your backend expects it
      # DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      - mlflow
      - db

  frontend:
    build:
      context: ./frontend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "start"]
    depends_on:
      - backend

  pgadmin:
    image: dpage/pgadmin4:7.6
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"  # Enable pre-configured servers
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./scripts/pgadmin/generate_servers.sh:/scripts/pgadmin/generate_servers.sh
    entrypoint: ["/bin/bash", "-c", "bash /scripts/pgadmin/generate_servers.sh && /entrypoint.sh"]

  db:
    image: postgis/postgis:15-3.4-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  mlflow:
    image: python:3.11-slim
    working_dir: /mlflow
    volumes:
      - ./mlflow_data:/mlflow
    ports:
      - "${MLFLOW_PORT}:5000"
    command: >
      sh -c "pip install mlflow &&
             mlflow server --backend-store-uri sqlite:///mlflow.db
                           --default-artifact-root /mlflow/artifacts
                           --host 0.0.0.0 --port ${MLFLOW_PORT}"

volumes:
  postgres_data:
  pgadmin_data:
